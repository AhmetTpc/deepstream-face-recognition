/**
 * Copyright (c) 2017-2021, NVIDIA CORPORATION.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __GST_DSPOSTPROCESSING_H__
#define __GST_DSPOSTPROCESSING_H__

#include <gst/base/gstbasetransform.h>
#include <gst/video/video.h>

/* Open CV headers */
#ifdef WITH_OPENCV
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#endif

#include <cuda.h>
#include <cuda_runtime.h>

#include "gst-nvquery.h"
#include "gstnvdsmeta.h"
#include "nvbufsurface.h"
#include "nvbufsurftransform.h"

/* Package and library details required for plugin_init */
#define PACKAGE "dspostprocessing"
#define VERSION "1.0"
#define LICENSE "Proprietary"
#define DESCRIPTION "NVIDIA postprocessing plugin for integration with DeepStream on DGPU"
#define BINARY_PACKAGE "NVIDIA DeepStream 3rdparty IP integration postprocessing plugin"
#define URL "http://nvidia.com/"

G_BEGIN_DECLS
/* Standard boilerplate stuff */
typedef struct _GstDsPostProcessing GstDsPostProcessing;
typedef struct _GstDsPostProcessingClass GstDsPostProcessingClass;

/* Standard boilerplate stuff */
#define GST_TYPE_DSPOSTPROCESSING (gst_dspostprocessing_get_type())
#define GST_DSPOSTPROCESSING(obj) \
    (G_TYPE_CHECK_INSTANCE_CAST((obj), GST_TYPE_DSPOSTPROCESSING, GstDsPostProcessing))
#define GST_DSPOSTPROCESSING_CLASS(klass) \
    (G_TYPE_CHECK_CLASS_CAST((klass), GST_TYPE_DSPOSTPROCESSING, GstDsPostProcessingClass))
#define GST_DSPOSTPROCESSING_GET_CLASS(obj) \
    (G_TYPE_INSTANCE_GET_CLASS((obj), GST_TYPE_DSPOSTPROCESSING, GstDsPostProcessingClass))
#define GST_IS_DSPOSTPROCESSING(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GST_TYPE_DSPOSTPROCESSING))
#define GST_IS_DSPOSTPROCESSING_CLASS(klass) \
    (G_TYPE_CHECK_CLASS_TYPE((klass), GST_TYPE_DSPOSTPROCESSING))
#define GST_DSPOSTPROCESSING_CAST(obj) ((GstDsPostProcessing *)(obj))

struct _GstDsPostProcessing {
    GstBaseTransform base_trans;

    // Unique ID of the element. The labels generated by the element will be
    // updated at index `unique_id` of attr_info array in NvDsObjectParams.
    guint unique_id;

    // Frame number of the current input buffer
    guint64 frame_num;

    // CUDA Stream used for allocating the CUDA task
    cudaStream_t cuda_stream;

    // Host buffer to store RGB data for use by algorithm
    void *host_rgb_buf;

    // the intermediate scratch buffer for conversions RGBA
    NvBufSurface *inter_buf;

    // Input video info (resolution, color format, framerate, etc)
    GstVideoInfo video_info;

    // Flag which defince igpu/dgpu
    guint is_integrated;

    // Amount of objects processed in single call to algorithm
    guint batch_size;

    // GPU ID on which we expect to execute the task
    guint gpu_id;

    std::vector<std::vector<int>> initial_colors;
    guint num_initial_colors;

#ifdef WITH_OPENCV
    std::vector<cv::Vec3f> initial_colors_lab;
#endif
};

// Boiler plate stuff
struct _GstDsPostProcessingClass {
    GstBaseTransformClass parent_class;
};

GType gst_dspostprocessing_get_type(void);

G_END_DECLS
#endif /* __GST_DSPOSTPROCESSING_H__ */
